variables:
  parity_version: "2.4.5"
jobs:
  - job: 'Clippy'
    pool:
      vmImage: 'ubuntu-16.04'
    container: 'rust:latest'
    steps:
      - script: rustup component add clippy
        displayName: Install Clippy
      - script: cd cli && cargo clippy --all
        displayName: Run clippy

  - job: 'Test'
    strategy:
      matrix:
        windows-stable:
          imageName: 'vs2017-win2016'
          rustup_toolchain: stable
        windows-beta:
          imageName: 'vs2017-win2016'
          rustup_toolchain: beta
        mac-stable:
          imageName: 'macos-10.13'
          rustup_toolchain: stable
        mac-beta:
          imageName: 'macos-10.13'
          rustup_toolchain: beta
        linux-stable:
          imageName: 'ubuntu-16.04'
          rustup_toolchain: stable
        linux-beta:
          imageName: 'ubuntu-16.04'
          rustup_toolchain: beta
    pool:
      vmImage: $(imageName)
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: "10.5.0"
        displayName: Install Node
      - script: npm install -g solc
        displayName: Install Solcjs
      #- script: |
          #mkdir -p ../Downloads
          #cd ../Downloads
          #curl -L -o "solc" "https://github.com/ethereum/solidity/releases/download/v0.5.9/solc-static-linux"
          #chmod +x solc
        #displayName: Linux install Solc
        #condition: eq( variables['Agent.OS'], 'Linux' )
      #- script: |
          #brew update
          #brew upgrade
          #brew tap ethereum/ethereum
          #brew install solidity
        #displayName: Mac install Solc
        #condition: eq( variables['Agent.OS'], 'Darwin' )
      #- powershell: |
          #mkdir -p ../Downloads
          #$client = new-object System.Net.WebClient
          #$client.DownloadFile("https://github.com/ethereum/solidity/releases/download/v0.5.9/solidity-windows.zip", "..\Downloads\solidity-windows.zip")
          #Expand-Archive –Path “..\Downloads\solidity-windows.zip” –Destination “..\Downloads\solidity-windows”
        #displayName: Windows install Solc 
        #condition: eq( variables['Agent.OS'], 'Windows_NT' )
      - script: npm install -g ganache-cli
        displayName: Install Ganache CLI
      #- script: bash <(curl https://get.parity.io -L)
        #condition: ne( variables['Agent.OS'], 'Windows_NT' )
        #displayName: Install Parity
      #- bash: |
          #mkdir -p ../Downloads
          #cd ../Downloads
          #curl -L -o "parity.exe" "https://releases.parity.io/ethereum/v${PARITY_VERSION}/x86_64-pc-windows-msvc/parity.exe"
        #condition: eq( variables['Agent.OS'], 'Windows_NT' )
        #displayName: Windows install Parity
      - script: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
        displayName: Install rust
        condition: ne( variables['Agent.OS'], 'Windows_NT' )
      - script: |
          curl -sSf -o rustup-init.exe https://win.rustup.rs
          rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
          echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
        displayName: Windows install rust
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
      #- script: cargo build --all
        #displayName: Cargo build
      - script: cargo test --all
        displayName: Cargo test vibranium
      #- script: nohup parity --config dev &
        #condition: ne( variables['Agent.OS'], 'Windows_NT' )
        #displayName: Start Parity
      #- bash: |
          #export PATH="$(cd ../Downloads && pwd):${PATH}"
          #nohup parity.exe --config dev &
        #condition: eq( variables['Agent.OS'], 'Windows_NT' )
        #displayName: Windwos start Parity
      - script: nohup ganache-cli &
        displayName: Start Ganache
        condition: ne( variables['Agent.OS'], 'Windows_NT' )
      - powershell: Start-Process -FilePath "ganache-cli"
        displayName: Windows start Ganache
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
      - bash: |
          #export PATH="$(cd ../Downloads && pwd):${PATH}"
          #export PATH="$(cd ../Downloads/solidity-windows && pwd):${PATH}"
          cd cli && cargo test --all -- --nocapture
        displayName: Cargo test vibranium-cli
